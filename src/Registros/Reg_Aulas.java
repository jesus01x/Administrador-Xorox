/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Registros;

import Clases1.Conexion;
import Clases1.Validar_Campo_de_Texto;
import Clases1.fondo_imagen;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp Pavilion g4
 */
public class Reg_Aulas extends javax.swing.JInternalFrame {

     //Atributos
     int x=0;
     int y=0;
     int id_Aula_mod=0;
    Validar_Campo_de_Texto v=new Validar_Campo_de_Texto();
//Los paso como parametro de medidas para la imagen de fondo
fondo_imagen  p=new fondo_imagen(x,y,"/Imagenes/fondo13.png");  
    int id_Aula;
    DefaultTableModel md;
    String datos[][];
    String cabecera[]={"ID_Aula","Aula"};
        
    
    
    
    public Reg_Aulas() {
        initComponents();
        
         md=new DefaultTableModel(datos, cabecera);
        jTable1.setModel(md);
         x=this.getWidth();
        y=this.getHeight();
        jPanel1.setOpaque(false);
       txtID_Aula.setEnabled(false);
        txt_Aula.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardarCambios.setEnabled(false);
        btnregistrar.setEnabled(false);
       //Se recrea el objeto para que pinte el frame con los nuevos
       //Valores de x,y
       //Se hace de esto debido a que a partir de este constructor los valores del 
       //jframe cambian.
        p=new fondo_imagen(x,y,"/Imagenes/fondo13.png");
        //Se agrega el nuevo panel al jframe
        this.add(p);
        //Se empaqueta para que este se quede estatico sin modificar la posiciones de los
        //demas paneles.
        this.pack();
         try {
             Consultar();
         } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Error: "+ex.getMessage());
         }
         v.SNumeros(txtID_Aula);
//         v.SLETRAS_y_Espacios(txt_Aula);
              
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_Aula = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtID_Aula = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        btnGuardarCambios = new javax.swing.JButton();
        btnmostrar = new javax.swing.JButton();
        btnregistrar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnnuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jLabel1.setText("Aula:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Aula", "Aula"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("ID del Aula:");

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(null);
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnGuardarCambios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar cambios.png"))); // NOI18N
        btnGuardarCambios.setText("Guardar Cambios");
        btnGuardarCambios.setBorder(null);
        btnGuardarCambios.setBorderPainted(false);
        btnGuardarCambios.setContentAreaFilled(false);
        btnGuardarCambios.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGuardarCambios.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });

        btnmostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnmostrar.setText("Mostrar");
        btnmostrar.setBorder(null);
        btnmostrar.setBorderPainted(false);
        btnmostrar.setContentAreaFilled(false);
        btnmostrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnmostrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnmostrar.setIconTextGap(5);
        btnmostrar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnmostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmostrarActionPerformed(evt);
            }
        });

        btnregistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        btnregistrar.setText("Registrar");
        btnregistrar.setBorder(null);
        btnregistrar.setBorderPainted(false);
        btnregistrar.setContentAreaFilled(false);
        btnregistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregistrarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setBorder(null);
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnnuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/nuevo.png"))); // NOI18N
        btnnuevo.setText("Nuevo");
        btnnuevo.setAlignmentY(0.2F);
        btnnuevo.setBorder(null);
        btnnuevo.setBorderPainted(false);
        btnnuevo.setContentAreaFilled(false);
        btnnuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnnuevo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnuevoActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setText("eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_Aula, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                                    .addComponent(txtID_Aula)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnnuevo)
                                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(btnGuardarCambios))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnregistrar)
                                        .addGap(14, 14, 14))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(btnSalir)))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnmostrar)
                            .addComponent(btnEliminar))))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID_Aula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_Aula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnnuevo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnmostrar)
                            .addComponent(btnregistrar))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalir)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int Comprobar_Id_Aula(int d)
    {
        int x=0;
        try
        {
        String consultar="SELECT * FROM xorox.aulas where idAulas="+d+";";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object datos[]=new Object[2];
        while(rs.next())
        {
         x=rs.getInt("idAulas");
        }
        conn.close();
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
        return x;
    }
    
    public void Consultas()
    {
        try
        {
        String consultar="SELECT * FROM xorox.aulas;";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object datos[]=new Object[2];
        while(rs.next())
        {
         datos[0]=rs.getString("idAulas");
         datos[1]=rs.getString("Aula");
         md.addRow(datos);
        }
        conn.close();
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
    }
    
    public void Actualizar()
    {
          btnGuardarCambios.setEnabled(false);
        try
      {
   
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Segun la columna que haya seleccionado sera el valor que se modique
        int idAula=Integer.parseInt(txtID_Aula.getText());
        String aula=txt_Aula.getText();
        String actualizar="UPDATE `xorox`.`aulas` SET `idAulas`=?, `Aula`=? WHERE `idAulas`="+id_Aula_mod+";";
        PreparedStatement pst=conn.prepareStatement(actualizar);
        pst.setInt(1, idAula);
        pst.setString(2, aula);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Cambio realizado con exito");
        conn.close();
      }catch(SQLException e)
      {
        JOptionPane.showMessageDialog(null, e.getMessage());
      }  
    }
            
    
    public void Insertar()
    {
        
       String registrar="INSERT INTO `xorox`.`aulas` (`idAulas`, `Aula`) VALUES (?,?);";
       int idAula=Integer.parseInt(txtID_Aula.getText());
       String Aula=txt_Aula.getText();
       
         try
            {
                
                Conexion miconexion=new Conexion();
                Connection conn= miconexion.getConnection();
                PreparedStatement pst=conn.prepareStatement(registrar);
                Object info[]={idAula,Aula};
                pst.setInt(1, idAula);        
                pst.setString(2, Aula);
                pst.executeUpdate();
                md.addRow(info);
                limpiar();
                JOptionPane.showMessageDialog(null, "Registro Exitoso");
                conn.close();
                btnnuevo.setEnabled(true);
                btnregistrar.setEnabled(false);
                btnCancelar.setEnabled(false);
            }catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
      
    }
    
    public void Eliminar()
    {
              btnEliminar.setEnabled(false);
            try
        {
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Obtiene la fila a eliminar
        int idAula=Integer.parseInt(txtID_Aula.getText());      
        String eliminar="DELETE FROM `xorox`.`aulas` WHERE `idAulas`=?;";
        PreparedStatement pst=conn.prepareStatement(eliminar);  
        pst.setInt(1, idAula);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Registro Eliminado");
        conn.close();  
            btnCancelar.setEnabled(false);
        }catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
       public void limpiartabla(DefaultTableModel md)
    {
       //Recibo el modelo de la tabla para limpiarlo de manera correcta 
  for (int i = 0; i < jTable1.getRowCount(); i++) {
           md.removeRow(i);
           i-=1;
       }
    }
    
    
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        // TODO add your handling code here:
        if(txtID_Aula.getText().equals("") || txt_Aula.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No se permiten campos vacios");
        }
        else
        {
            Actualizar();
            limpiartabla(md);
            Consultas();
        }
    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void btnmostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmostrarActionPerformed
        // TODO add your handling code here:
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnregistrar.setEnabled(false);
        txt_Aula.setEnabled(false);
        txtID_Aula.setEnabled(true);
        limpiartabla(md);
        Consultas();
    }//GEN-LAST:event_btnmostrarActionPerformed

    private void btnregistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregistrarActionPerformed
        // TODO add your handling code here:  ||
        if(txtID_Aula.getText().equals("") || txt_Aula.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No se permiten campos vacios");
        }
        else
        {
            Insertar();
            limpiartabla(md);
            Consultas();
            txtID_Aula.setEnabled(false);
            txt_Aula.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnEditar.setEnabled(false);
            btnCancelar.setEnabled(false);
        }
    }//GEN-LAST:event_btnregistrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:

        btnCancelar.setEnabled(true);
        if(txtID_Aula.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No se permite dejar el Campo ID Aula Vacio");
        }
        else
        {

            id_Aula_mod=Integer.parseInt(txtID_Aula.getText());
            int comprobado=Comprobar_Id_Aula(id_Aula_mod);
            if(comprobado!=0)
            {
                txt_Aula.setEnabled(true);
                btnEditar.setEnabled(false);
                btnGuardarCambios.setEnabled(true);
                txtID_Aula.setEnabled(false);
                txt_Aula.setEnabled(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "El ID de Aula no existe o es incorrecto");
            }

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnuevoActionPerformed
        // TODO add your handling code here:
        btnnuevo.setEnabled(false);
        txtID_Aula.setEnabled(true);
        txt_Aula.setEnabled(true);
        btnregistrar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardarCambios.setEnabled(false);
        btnCancelar.setEnabled(true);
    }//GEN-LAST:event_btnnuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        btnCancelar.setEnabled(true);
        if(txtID_Aula.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No se permite dejar el Campo ID Aula Vacio");
        }
        else
        {

            id_Aula_mod=Integer.parseInt(txtID_Aula.getText());
            int comprobado=Comprobar_Id_Aula(id_Aula_mod);
            if(comprobado!=0)
            {
                Eliminar();
                limpiartabla(md);
                Consultas();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "El ID de Aula no existe o es incorrecto");
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        btnregistrar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardarCambios.setEnabled(false);
        btnnuevo.setEnabled(true);
        txtID_Aula.setEnabled(false);
        txt_Aula.setEnabled(false);
        btnCancelar.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

 public void limpiar()
    {
        txtID_Aula.setText("");
        txt_Aula.setText("");
    }
    
    public void Consultar() throws SQLException
    {
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection(); 
        String consultar="SELECT * FROM xorox.aulas;";
         Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object info[]=new Object[2];
        while(rs.next())
        {       
          info[0]=rs.getInt("idAulas");
          info[1]=rs.getString("Aula");
          md.addRow(info);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnmostrar;
    private javax.swing.JButton btnnuevo;
    private javax.swing.JButton btnregistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtID_Aula;
    private javax.swing.JTextField txt_Aula;
    // End of variables declaration//GEN-END:variables
}
