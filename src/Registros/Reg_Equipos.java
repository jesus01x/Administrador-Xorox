/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Registros;

import Clases1.Conexion;
import Clases1.Validar_Campo_de_Texto;
import Clases1.fondo_imagen;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import  javax.swing.JFormattedTextField;
/**
 *
 * @author Administrador
 */
public class Reg_Equipos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Reg_Equipos
     */
    
    int x=0;
    int y=0;
    String Mac_mod="";
    Validar_Campo_de_Texto v=new Validar_Campo_de_Texto();
  
     

//Los paso como parametro de medidas para la imagen de fondo
fondo_imagen  p=new fondo_imagen(x,y,"/Imagenes/fondo11.png");  
    DefaultTableModel md;
    String cabecera[]={"MAC Address","No. Estacion","Aula","Direccion IP"};
    String datos[][];
    int idAula;
    boolean editando=false; //Controla si se esta ediatndo o o se esta registrando
    
    
    public Reg_Equipos()   {
        initComponents();
        md=new DefaultTableModel(datos, cabecera);
        jTable1.setModel(md);
        btnEliminar.setEnabled(false);
        btnEditar.setEnabled(false);
        try {
            consultar_Aulas();
        } catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, "Error: "+ex.getMessage());
        }
        //Consultas();
         x=this.getWidth();
        y=this.getHeight();
//        jPanel1.setOpaque(false);
       
       //Se recrea el objeto para que pinte el frame con los nuevos
       //Valores de x,y
       //Se hace de esto debido a que a partir de este constructor los valores del 
       //jframe cambian.
        p=new fondo_imagen(x,y,"/Imagenes/fondo11.png");
        //Se agrega el nuevo panel al jframe
        this.add(p);
        //Se empaqueta para que este se quede estatico sin modificar la posiciones de los
        //demas paneles.
        this.pack();
        //Este metodo recibe informacion cuando se selecciona una fila de la tabla        
        v.SNumeros(txtDir_Ip);
        
        //Desactivar Campos
        Desactivar_Campos();
        Consultas();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMACAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEstacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbAulas = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnnuevo = new javax.swing.JButton();
        btnmostrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnregistrar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        txtDir_Ip = new javax.swing.JFormattedTextField();

        jLabel1.setText("jLabel1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Registro de Equipos");

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("MAC Address:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 46, -1, -1));
        jPanel1.add(txtMACAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 43, 191, -1));

        jLabel3.setText("No. estacion:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 46, -1, -1));
        jPanel1.add(txtEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(379, 43, 191, -1));

        jLabel4.setText("Aula:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 72, -1, -1));

        jcbAulas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        jPanel1.add(jcbAulas, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 69, 100, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MAC Address", "No. Estacion", "Aula"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 138, 650, 228));

        jLabel6.setText("Direccion IP:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        btnnuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/nuevo.png"))); // NOI18N
        btnnuevo.setText("Nuevo");
        btnnuevo.setAlignmentY(0.2F);
        btnnuevo.setBorder(null);
        btnnuevo.setBorderPainted(false);
        btnnuevo.setContentAreaFilled(false);
        btnnuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnnuevo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnnuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, -1, 60));

        btnmostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnmostrar.setText("Mostrar");
        btnmostrar.setBorder(null);
        btnmostrar.setBorderPainted(false);
        btnmostrar.setContentAreaFilled(false);
        btnmostrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnmostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmostrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnmostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 390, -1, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setText("eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, -1, -1));

        btnregistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        btnregistrar.setText("Registrar");
        btnregistrar.setBorder(null);
        btnregistrar.setBorderPainted(false);
        btnregistrar.setContentAreaFilled(false);
        btnregistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnregistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, -1, 70));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(null);
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 550, 90, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 120, 60));

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setBorder(null);
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, -1, 70));

        try {
            txtDir_Ip.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtDir_Ip, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 180, -1));

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void Activar_Campos()
    {
        txtMACAddress.setEnabled(true);    
        txtDir_Ip.setEnabled(true);
        jcbAulas.setEnabled(true);                
        txtEstacion.setEnabled(true); 
    }
    
    public void Desactivar_Campos()
    {
        txtMACAddress.setEnabled(false);    
        txtDir_Ip.setEnabled(false);
        jcbAulas.setEnabled(false);                
        txtEstacion.setEnabled(false); 
    }
    
    private void btnnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnuevoActionPerformed
        // TODO add your handling code here:
        btnnuevo.setEnabled(false);
        Activar_Campos();
        btnregistrar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnCancelar.setEnabled(true);
        editando=false;
    }//GEN-LAST:event_btnnuevoActionPerformed

    private void btnmostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmostrarActionPerformed
        // TODO add your handling code here:
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnregistrar.setEnabled(false);
        Desactivar_Campos();
        txtMACAddress.setEnabled(true);
        limpiartabla(md);
        Consultas();
    }//GEN-LAST:event_btnmostrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        btnCancelar.setEnabled(true);
        //Comprueba que el campo no este vacio
        if(txtMACAddress.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No se permite dejar la MAC ADRRESS vacia");
        }
        else
        {

            Mac_mod=txtMACAddress.getText();
            //Comprueba que la Direccion MAC este registrada en la base de datos
            String comprobado=Comprobar_MACADRESS(Mac_mod);
            if(comprobado!=null)
            {
                //Elimina el equipo
                Eliminar();
                //Limpia los registros de la tabla
                limpiartabla(md);
                //Actualiza los registros en la tabla
                Consultas();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "La MAC ADRESS no es valida");
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnregistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregistrarActionPerformed
        // TODO add your handling code here:  ||
        if(txtMACAddress.getText().equals("") || txtDir_Ip.getText().equals("") 
           || txtEstacion.getText().equals("") )
        {
            JOptionPane.showMessageDialog(null, "No se permiten campos vacios");
        }
        else
        {
            if(jcbAulas.getSelectedItem().toString().equals("Seleccione"))
            {
                JOptionPane.showMessageDialog(null, "No ha Seleccionado ningun Aula");
            }
            else
            {
                if(editando==false)
               {
             //Para Registrar      
               Insertar();
               limpiartabla(md);
               Consultas();
               Desactivar_Campos();
               btnEliminar.setEnabled(false);
               btnEditar.setEnabled(false);
               btnCancelar.setEnabled(false); 
               
             //Desactivar Campos  
               txtMACAddress.setEnabled(false);
               txtEstacion.setEnabled(false);
               txtDir_Ip.setEnabled(false);
               }
                else
                {
             //Para modificar     
               Actualizar(Mac_mod);
               limpiartabla(md);
               Consultas();  
               editando=false;
               btnEditar.setEnabled(false);
               
               //Desactivar Campos  
               txtMACAddress.setEnabled(false);
               txtEstacion.setEnabled(false);
               txtDir_Ip.setEnabled(false);
               btnEditar.setEnabled(true);
                }                            
            }
          
        }

    }//GEN-LAST:event_btnregistrarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        btnregistrar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);        
        btnnuevo.setEnabled(true);
        Desactivar_Campos();
        btnCancelar.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:

        btnCancelar.setEnabled(true);
        if(txtMACAddress.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No se permite dejar el Campo ID Aula Vacio");
        }
        else
        {

            Mac_mod=(txtMACAddress.getText());
            String comprobado=Comprobar_MACADRESS(Mac_mod);
            if(comprobado!=null)
            {                
               editando=true;
               btnregistrar.setEnabled(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "El ID de Aula no existe o es incorrecto");
            }

        }

    }//GEN-LAST:event_btnEditarActionPerformed

    //Lee las Aulas ya registradas y las agrega al jcombobox 
    public void consultar_Aulas() throws SQLException
    {
        try
        {
        String consultar="SELECT * FROM xorox.aulas;";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        while(rs.next())
        {
          jcbAulas.addItem(rs.getString("Aula"));
        }
        conn.close();
        }catch(SQLException ez)
        {
        JOptionPane.showMessageDialog(null, ez.getMessage());
                    
        }
    }
    
    public String Comprobar_MACADRESS(String d)
    {
        String x="";
        try
        {
        String consultar="SELECT * FROM xorox.equipo where MAC_ADDRESS='"+Mac_mod+"';";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object datos[]=new Object[2];
        while(rs.next())
        {
         x=rs.getString("MAC_ADDRESS");
        }
        conn.close();
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
        return x;
    }
    
     public void Consultas()
     {
       
         try
        {
        String consultar="select a.MAC_ADDRESS,a.No_Estacion,b.Aula,a.Direccion_IP from equipo a,aulas b where id_Aula=idAulas;";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object datos[]=new Object[4];
        while(rs.next())
        {
         datos[0]=rs.getString("MAC_ADDRESS");
         datos[1]=rs.getString("No_Estacion");
         datos[2]=rs.getString("Aula"); 
         datos[3]=rs.getString("Direccion_IP");
         //MAC Address","No. Estacion","Aula","Direccion IP
         md.addRow(datos);
        }
        conn.close();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
     }
     
     public void limpiartabla(DefaultTableModel md)
    {
       //Recibo el modelo de la tabla para limpiarlo de manera correcta 
  for (int i = 0; i < jTable1.getRowCount(); i++) {
           md.removeRow(i);
           i-=1;
       }
    }
            
     
     public void Insertar()
     {
           try
            {
                
                Conexion miconexion=new Conexion();
                Connection conn= miconexion.getConnection();
               
                String insertar="INSERT INTO `xorox`.`equipo` (`MAC_ADDRESS`, `No_Estacion`, `id_Aula`, `Direccion_IP`) "
                + "VALUES (?,?,?,?);";
                PreparedStatement pst=conn.prepareStatement(insertar);
                String Mac=txtMACAddress.getText();
                String Estacion=txtEstacion.getText();
                String Aula=jcbAulas.getSelectedItem().toString();
                String Dir_IP = txtDir_Ip.getText();
                ConsultarAulas(Aula);
                
                Object info[]={Mac,Estacion,Aula,Dir_IP};
                pst.setString(1, Mac);
                pst.setString(2, Estacion);
                pst.setInt(3, idAula);        
                pst.setString(4, Dir_IP);
                pst.executeUpdate();
                md.addRow(info);
                limpiar();
                JOptionPane.showMessageDialog(null, "Registro Exitoso");
                conn.close();
                btnnuevo.setEnabled(true);
                btnregistrar.setEnabled(false);
            }catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
     }
     
     public void Eliminar()
     {
         try
        {
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Obtiene la fila a eliminar
       String Mac=txtMACAddress.getText();      
        String eliminar="DELETE FROM `xorox`.`equipo` WHERE `MAC_ADDRESS`='"+Mac+"';";
        PreparedStatement pst=conn.prepareStatement(eliminar);  
        pst.execute();
        JOptionPane.showMessageDialog(null, "Registro Eliminado");
        conn.close();       
        }catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());
        }
     }
     
     public void Actualizar(String MAC_mod)
     {
              
       String Mac=txtMACAddress.getText();
       String Estacion=txtEstacion.getText();
       String Aula=jcbAulas.getSelectedItem().toString();
       ConsultarAulas(Aula);
       
       String Dir_IP = txtDir_Ip.getText();
      try
      {
   
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Segun la columna que haya seleccionado sera el valor que se modique
        String MAC=txtMACAddress.getText();
         
        String actualizar="UPDATE `xorox`.`equipo` "
        + "SET `MAC_ADDRESS`=?, `No_Estacion`=?,"
        + "`id_Aula`=?, `Direccion_IP`=? WHERE `MAC_ADDRESS`=?;";
        PreparedStatement pst=conn.prepareStatement(actualizar);
            
        pst.setString(1, Mac);
        pst.setString(2, Estacion);
        pst.setInt(3, idAula);
        pst.setString(4, Dir_IP);
        pst.setString(5, MAC_mod);
        pst.executeUpdate();

        JOptionPane.showMessageDialog(null, "Cambio realizado con exito");
        conn.close();
      }catch(SQLException e)
      {
        JOptionPane.showMessageDialog(null, e.getMessage());
      }
     }
     
   
    public int ConsultarAulas(String Aula)
    {
        try
        {
          
        String consultar="select idAulas from aulas where Aula='"+Aula+"';";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);      
        while(rs.next())
        {
        idAula=rs.getInt("idAulas");
        }
        conn.close();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
        return idAula;
    }
    
    public void limpiar()
    {
      txtMACAddress.setText("");
      txtEstacion.setText("");          
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnmostrar;
    private javax.swing.JButton btnnuevo;
    private javax.swing.JButton btnregistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox jcbAulas;
    private javax.swing.JFormattedTextField txtDir_Ip;
    private javax.swing.JTextField txtEstacion;
    private javax.swing.JTextField txtMACAddress;
    // End of variables declaration//GEN-END:variables
}
