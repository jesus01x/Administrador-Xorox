/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Registros;

import Clases1.Conexion;
import Clases1.Validar_Campo_de_Texto;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Administrador
 */
public class Reg_usuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form Reg_usuarios1
     */
    int id;
    DefaultTableModel md;
    String cabecera[]={"No. Matricula","Alumno","Carrera","Contrase単a"};
    String datos[][];
      boolean exito=false;
      boolean editando=false;
      
    //No: Matricula que se modficara
    String nom_modificar="";
    Validar_Campo_de_Texto v=new Validar_Campo_de_Texto();
    public Reg_usuarios() {
        initComponents();
        md=new DefaultTableModel(datos, cabecera);
        jTable1.setModel(md);
        Consultas();
        //Desactiva los campos que sean reactivas al presionar nuevo
        desactivar_campos();
        desactivar_botones();
        btnCancelar.setEnabled(false);
        Consultar_Carreras();
      //  consultas();
        v.SNumeros(txtNo_matricula);
        v.SLETRAS_y_Espacios(txtalumno);
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtNo_matricula = new javax.swing.JTextField();
        jcbCarreras = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtalumno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtcontrase単a = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Registro de Usuarios");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. Matricula", "Alumno", "Carrera", "Contrase単a"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jcbCarreras.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));

        jLabel4.setText("Alumno:");

        jLabel5.setText("Carrera:");

        jLabel6.setText("Contrase単a:");

        jLabel1.setText("No. Matricula:");

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/nuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setAlignmentY(0.2F);
        btnNuevo.setBorder(null);
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        btnRegistrar.setText("Guardar");
        btnRegistrar.setBorder(null);
        btnRegistrar.setBorderPainted(false);
        btnRegistrar.setContentAreaFilled(false);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setText("eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnMostrar.setText("Mostrar");
        btnMostrar.setBorder(null);
        btnMostrar.setBorderPainted(false);
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(null);
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnNuevo)
                        .addGap(113, 113, 113)
                        .addComponent(btnRegistrar)
                        .addGap(91, 91, 91)
                        .addComponent(btnMostrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(btnEliminar)
                        .addGap(99, 99, 99)
                        .addComponent(btnSalir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(29, 29, 29)
                                .addComponent(jcbCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(3, 3, 3)
                                .addComponent(txtNo_matricula, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31)
                                .addComponent(txtalumno, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel6)
                                .addGap(10, 10, 10)
                                .addComponent(txtcontrase単a, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNo_matricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(txtalumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jcbCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtcontrase単a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevo)
                    .addComponent(btnRegistrar)
                    .addComponent(btnMostrar))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void desactivar_campos()
    {
        txtNo_matricula.setEnabled(false);
        txtalumno.setEnabled(false);
        txtcontrase単a.setEnabled(false);
        jcbCarreras.setEnabled(false);
    }
    
    public void desactivar_botones()
    {
        btnRegistrar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnMostrar.setEnabled(false);       
    }
    
    public void activar_botones()
    {
        btnRegistrar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnMostrar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }
    
    public void activar_campos()
    {
        txtNo_matricula.setEnabled(true);
        txtalumno.setEnabled(true);
        txtcontrase単a.setEnabled(true);
        jcbCarreras.setEnabled(true);
        btnCancelar.setEnabled(true);
    }
    
    
    
    
    public int Consultar_Carreras_Seleccionada(String Carrera)
    {
         try
        {
          
        String consultar="select idCarreras from carreras where Carrera='"+Carrera+"';";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);      
        while(rs.next())
        {
        id=rs.getInt("idCarreras");
        JOptionPane.showMessageDialog(null, "Identificador de la Carrera: "+id);
        }
        conn.close();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
         return id;
    }
    
    
    public void Consultar_Carreras()
    {
         try
        {
        String consultar="SELECT * FROM xorox.carreras;";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        while(rs.next())
        {
           jcbCarreras.addItem(rs.getString("Carrera"));         
        }
        conn.close();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
      
    }    
    
     public void Actualizar(String nom_modificar)
    {
         
        try
      {
   
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Segun la columna que haya seleccionado sera el valor que se modique
        
        String No_Matricula=txtNo_matricula.getText();
        String Alumno=txtalumno.getText();
        String Carrera=jcbCarreras.getSelectedItem().toString();
        if(Carrera.equals("Seleccione"))
        {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna Carrera");
        }
        else
        {
        String Contrase単a=txtcontrase単a.getText();
        String actualizar="UPDATE `xorox`.`alumnos` SET `NO_MATRICULA`=?, `Alumno`=?, `Contrase単a`=?, `Carrera`=? WHERE `NO_MATRICULA`=?;";
        PreparedStatement pst=conn.prepareStatement(actualizar);
        pst.setString(1,No_Matricula);
        pst.setString(2, Alumno);
        pst.setString(3,Contrase単a);
        pst.setString(4, Carrera);
        pst.setString(5, nom_modificar);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Cambio realizado con exito");
        conn.close();
        }
      }catch(SQLException e)
      {
        JOptionPane.showMessageDialog(null, e.getMessage());
      }  
    }
       
        
          public String[] Comprobar_NoMatricula(String d)
    {
           String datos1[]=new String[4];
        try
        {
        String consultar="SELECT * FROM xorox.alumnos where NO_MATRICULA='"+d+"';";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
    
        while(rs.next())
        {
         datos1[0]=rs.getString("NO_MATRICULA");
         datos1[1]=rs.getString("Alumno");
         datos1[2]=rs.getString("Contrase単a");
         datos1[3]=rs.getString("Carrera");         
        }
        conn.close();
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
        return datos1;
    }
          
        public boolean Eliminar()
    {
              btnEliminar.setEnabled(false);
              boolean exito=false;
            try
        {
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Obtiene la fila a eliminar
        String No_Matricula=txtNo_matricula.getText();
        String eliminar="DELETE FROM `xorox`.`alumnos` WHERE `NO_MATRICULA`=?;";
        PreparedStatement pst=conn.prepareStatement(eliminar);  
        pst.setString(1,No_Matricula);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Registro Eliminado");
         exito=true;
        conn.close();  
        btnCancelar.setEnabled(false);
        }catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return exito;    
    }     
    
    public void limpiar_Campos()
    {
        txtNo_matricula.setText("");
        txtalumno.setText("");
        txtcontrase単a.setText("");
        jcbCarreras.setSelectedIndex(0);
    }
        
    public boolean Insertar()
    {
        boolean exito=false;
         try
            {
                //Instrucciones SQL para realizar el registro
                String registrar="INSERT INTO `xorox`.`alumnos` "
                + "(`NO_MATRICULA`, `Alumno`, `Contrase単a`, `Carrera`) "
                + "VALUES (?,?,?,?);";
                //Atributos
                String No_Matricula=txtNo_matricula.getText();
                String Alumno=txtalumno.getText();
                String Carrera=jcbCarreras.getSelectedItem().toString();
                String Contrase単a=txtcontrase単a.getText();
                Conexion miconexion=new Conexion();
                Connection conn= miconexion.getConnection();
                PreparedStatement pst=conn.prepareStatement(registrar);
                Object info[]={No_Matricula,Alumno,Carrera,Contrase単a};
                pst.setString(1, No_Matricula);        
                pst.setString(2, Alumno);
                pst.setString(3, Contrase単a);        
                pst.setString(4, Carrera);
                pst.executeUpdate();
                md.addRow(info);
                limpiar_Campos();
                JOptionPane.showMessageDialog(null, "Registro Exitoso");
                conn.close();
                exito=true;
            }catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
         return exito;
    }
            
            
    
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_formInternalFrameClosed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        //Activa los campos y botones disponibles
         activar_campos();
         activar_botones();
         //Desactiva el boton Nuevo
         btnNuevo.setEnabled(false);
         editando=false;
    }//GEN-LAST:event_btnNuevoActionPerformed

    
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
       exito=false;
        //Confirma que no hayan campos vacios
        if(jcbCarreras.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna Carrera");
        }else
        {
            //confirma si se encuentra en modo de edicion
            if(editando==false)
            {                
            exito=Insertar();//Confirma que se realizo la Inserccion correctamente
            if(exito)
            {
               //Desactiva los campos y botones
                desactivar_botones();            
                desactivar_campos();
                 //Activa el boton nuevo
                btnNuevo.setEnabled(true);  
                //Limpia la informacion que se encuentra en los campos
                limpiar_Campos();
            }   
            }
            else
            {
                //Activa los botones de Editar y Canclear
                btnEditar.setEnabled(true);              
                btnCancelar.setEnabled(false);
                String No_Matricula=Consultas_2(txtNo_matricula.getText());//Regresa la matricula ingresada
                //Si esta se encuentra en la base de datos
                if(!nom_modificar.equals(""))
                {
                 //Actuliza un registro en especifico de acuerdo al parametro que le paso
                 Actualizar(nom_modificar);
                 //Parche por si alguna columna y fila estan seleccionadas
                 if(jTable1.getSelectedRow()>-1 )
                 {
                   
               //Esto permite actualizar correctamente la informacion en caso que este 
               //seleccionada alguna columna o fila    
               //Deselecciona la fila  
                   md.setRowCount(-1);
               //Deselecciona la columna
                   md.setColumnCount(-1);
                 }
                 Consultas();
                 //Desactiva los campos y botones
                 desactivar_botones();
                 desactivar_campos();
                 //Limpia la informacion que se encuentra en los campos
                 limpiar_Campos();
                 //Activa el boton nuevo
                 btnNuevo.setEnabled(true);
                }
                //Si no se encuentra mandara el siguiente mensaje
                else
                {
                JOptionPane.showMessageDialog(null, "La Matricula escrita no coincide con la base de datos");
                }
            }
           
        }
        
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:      
        exito=Eliminar();
        if(exito==true)
        {
        desactivar_campos();
        desactivar_botones();
        limpiar_Campos();
        btnNuevo.setEnabled(true); 
        Consultas();
        }
      
    }//GEN-LAST:event_btnEliminarActionPerformed

    
    public String Consultas_2(String No_Matricula)
    {
         String datos1="";
            try
        {
            limpiartabla(md);
        String consultar="SELECT * FROM xorox.alumnos where NO_MATRICULA='"+No_Matricula+"';";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
       
        while(rs.next())
        {
          datos1=rs.getString("NO_MATRICULA");
        }
        conn.close();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
            return datos1; 
    }
    
     public void Consultas()
    {
            try
        {
            limpiartabla(md);
        String consultar="SELECT * FROM xorox.alumnos;";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object datos[]=new Object[4];
        while(rs.next())
        {
          datos[0]=rs.getString("NO_MATRICULA");
          datos[1]=rs.getString("Alumno");
          datos[3]=rs.getString("Contrase単a");
          datos[2]=rs.getString("Carrera");
          md.addRow(datos);
        }
        conn.close();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
    }
    
     public void limpiartabla(DefaultTableModel md)
    {
       //Recibo el modelo de la tabla para limpiarlo de manera correcta 
  for (int i = 0; i < jTable1.getRowCount(); i++) {
           md.removeRow(i);
           i-=1;
       }
    }
    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        //Desactiva todos los campos
        desactivar_campos();
        //Limpia todos los campos
        limpiar_Campos();
        txtNo_matricula.setEnabled(true);
        
        //Parche por si alguna columna y fila estan seleccionadas
                 if(jTable1.getSelectedRow()>-1 )
                 {
                   
               //Esto permite actualizar correctamente la informacion en caso que este 
               //seleccionada alguna columna o fila    
               //Deselecciona la fila  
                   md.setRowCount(-1);
               //Deselecciona la columna
                   md.setColumnCount(-1);
                 }
                 //Muestra la informacion en la tabla.
        Consultas();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
      
       //Comprueba que no existan campos vacios 
        if(txtNo_matricula.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No ha ingresado el No de Matricula a Modificar");
        }
        else
        {
        nom_modificar=txtNo_matricula.getText();
        String var[]=new String[4];
        //Guarda en una arreglo de tipo cadena los valores obtenidos de la base de datos
        var=Comprobar_NoMatricula(nom_modificar);
        //Comprueba si no recibo informacion vacia o nula
          if(var[0]==null)
          {              
            JOptionPane.showMessageDialog(null,"El No. de Matricula es Incorrecto");             
          }
          else
          {            
            //Pasa la informacion del arreglo de String al los campos de texto
            txtNo_matricula.setText(var[0]);
            txtalumno.setText(var[1]);
            txtcontrase単a.setText(var[2]);
            jcbCarreras.setSelectedItem(var[3]);
            btnEditar.setEnabled(false);
            //Cambia al modo edicion.
            editando=true;
            //Activa el boton para Guardar los cammbios realizados
            btnRegistrar.setEnabled(true);            
          }          
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //Desactiva el boton de Cancelar
        btnCancelar.setEnabled(false);
        //Desactiva los campos y los botones           
        desactivar_campos();
        desactivar_botones();
        limpiar_Campos();
         //Activa el Boton de Nuevo
        btnNuevo.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox jcbCarreras;
    private javax.swing.JTextField txtNo_matricula;
    private javax.swing.JTextField txtalumno;
    private javax.swing.JTextField txtcontrase単a;
    // End of variables declaration//GEN-END:variables
}
