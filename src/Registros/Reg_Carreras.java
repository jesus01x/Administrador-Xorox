/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Registros;

import Clases1.Conexion;
import Clases1.Validar_Campo_de_Texto;
import Clases1.fondo_imagen;
import java.awt.Transparency;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class Reg_Carreras extends javax.swing.JInternalFrame {

    //Atributos
       int x=0;
       int y=0;
       int id_Carrera=0;
       String Carrera="";
       //Id de la carrera por el que sera remplazado en caso de edicion.
       int id_Carrera_mod = 0;       
       DefaultTableModel md;
       boolean editando=false;
       String Cabecera[]={"ID Carrera","Carrera"};
       String Datos[][];
//Los paso como parametro de medidas para la imagen de fondo
       
        Validar_Campo_de_Texto v=new Validar_Campo_de_Texto();
fondo_imagen  p=new fondo_imagen(x,y,"/Imagenes/fondo17.png");  
    public Reg_Carreras() {
        initComponents();
              
        md=new DefaultTableModel(Datos, Cabecera);
        jTable1.setModel(md);
        x=this.getWidth();
        y=this.getHeight();
        this.setOpaque(false);
       jScrollPane2.setOpaque(false);
       jScrollPane2.getViewport().setOpaque(false);
       espacio.setOpaque(false);
       //Se recrea el objeto para que pinte el frame con los nuevos
       //Valores de x,y
       //Se hace de esto debido a que a partir de este constructor los valores del 
       //jframe cambian.
        p=new fondo_imagen(x,y,"/Imagenes/fondo17.png");
        //Se agrega el nuevo panel al jframe
        this.add(p);
        //Se empaqueta para que este se quede estatico sin modificar la posiciones de los
        //demas paneles.
        this.pack();
        v.SNumeros(txtID_Carrera);
        v.SLETRAS_y_Espacios(txtCarrera);
        Desactivar_Botones();
        Desactivar_Campos();  
        Consultas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        espacio = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID_Carrera = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCarrera = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registro de Carreras");

        jScrollPane2.setBorder(null);
        jScrollPane2.setForeground(new java.awt.Color(236, 233, 216));
        jScrollPane2.setOpaque(false);

        jLabel1.setText("ID Carrera:");

        jLabel2.setText("Carrera:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/nuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setAlignmentY(0.2F);
        btnNuevo.setBorder(null);
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        btnRegistrar.setText("Guardar");
        btnRegistrar.setBorder(null);
        btnRegistrar.setBorderPainted(false);
        btnRegistrar.setContentAreaFilled(false);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnEliminar.setText("eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnMostrar.setText("Mostrar");
        btnMostrar.setBorder(null);
        btnMostrar.setBorderPainted(false);
        btnMostrar.setContentAreaFilled(false);
        btnMostrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(null);
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout espacioLayout = new javax.swing.GroupLayout(espacio);
        espacio.setLayout(espacioLayout);
        espacioLayout.setHorizontalGroup(
            espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(espacioLayout.createSequentialGroup()
                .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(espacioLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(espacioLayout.createSequentialGroup()
                                .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(espacioLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtID_Carrera, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(espacioLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(espacioLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(espacioLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnNuevo))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar)
                            .addComponent(btnRegistrar))
                        .addGap(60, 60, 60)
                        .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSalir)
                            .addComponent(btnMostrar))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        espacioLayout.setVerticalGroup(
            espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(espacioLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(espacioLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtID_Carrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar)))
                .addGap(11, 11, 11)
                .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(espacioLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(txtCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(espacioLayout.createSequentialGroup()
                        .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnRegistrar))
                        .addGap(6, 6, 6)
                        .addGroup(espacioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar)))
                    .addGroup(espacioLayout.createSequentialGroup()
                        .addComponent(btnMostrar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(espacio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
       public void Activar_Campos()
       {
       txtID_Carrera.setEnabled(true);
       txtCarrera.setEnabled(true);
       }
       
       public void Desactivar_Campos()
       {
       txtID_Carrera.setEnabled(false);
       txtCarrera.setEnabled(false);    
       }
      
       public void Activar_Botones()
       {
        btnRegistrar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnMostrar.setEnabled(true);
        btnSalir.setEnabled(true);
       }
       
       public void Desactivar_Botones()
       {
        btnRegistrar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnMostrar.setEnabled(false);
        btnSalir.setEnabled(false);   
       }                       
    
       public void limpiar_Campos()
       {
           txtID_Carrera.setText("");
           txtCarrera.setText("");
       }
       
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        //Activa los campos y botones disponibles
        Activar_Campos();
        Activar_Botones();
        //Desactiva el boton Nuevo
        btnNuevo.setEnabled(false);
        editando=false;
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        boolean exito=false;
        //Confirma que no hayan campos vacios
        if(txtID_Carrera.getText().equals("") || txtCarrera.getText().equals("") )
        {
            JOptionPane.showMessageDialog(null, "No se permiten Campos Vacios");
        }
        else
        {        
            //confirma si se encuentra en modo de edicion
            if(editando==false)
            {
                
                exito=Insertar();//Confirma que se realizo la Inserccion correctamente
                limpiartabla(md);
                Consultas();

                if(exito)
                {
                    //Desactiva los campos y botones
                    Desactivar_Botones();
                    Desactivar_Campos();
                    //Activa el boton nuevo
                    btnNuevo.setEnabled(true);
                    //Limpia la informacion que se encuentra en los campos
                    limpiar_Campos();
                }
            }
            else
            {
                //Activa los botones de Editar y Canclear
                btnEditar.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Seguimos igual? "+id_Carrera);
                id_Carrera_mod=Integer.parseInt(txtID_Carrera.getText());
                 JOptionPane.showMessageDialog(null, "ID CAMBIADO "+id_Carrera_mod);
                //Si esta se encuentra en la base de datos
                if(id_Carrera_mod!=0)
                {
                    //Actuliza un registro en especifico de acuerdo al parametro que le paso
                    Actualizar(id_Carrera_mod);
                    //Parche por si alguna columna y fila estan seleccionadas
                    if(jTable1.getSelectedRow()>=0 ||jTable1.getSelectedColumn()>=0 )
                    {

                        //Esto permite actualizar correctamente la informacion en caso que este
                        //seleccionada alguna columna o fila
                        //Deselecciona la fila
                        md.setRowCount(-1);
                        //Deselecciona la columna
                        md.setColumnCount(-1);
                    }
                    limpiartabla(md);
                    Consultas();
                    //Desactiva los campos y botones
                    Desactivar_Botones();
                    Desactivar_Botones();
                    //Limpia la informacion que se encuentra en los campos
                    limpiar_Campos();
                    //Activa el boton nuevo
                    btnCancelar.setEnabled(false);
                    btnNuevo.setEnabled(true);
                }
                //Si no se encuentra mandara el siguiente mensaje
                else
                {
                    JOptionPane.showMessageDialog(null, "Valores Erroneos");
                }
            }

        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        if(txtID_Carrera.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No ha ingreso el ID de la Carrera");
        }
        else
        {
            //Regresa un verdadero o un falso dependiendo de si se elimino
            //Correctamente o no.
            boolean exito=Eliminar();
            if(exito==true)
            {
                //En caso de que se haya eliminado
                Desactivar_Botones();
                //No permite editar los campos
                Desactivar_Campos();
                //Deja todo en la opcion seleccione
                limpiar_Campos();
                //Activa el boton nuevo
                btnNuevo.setEnabled(true);
                //Actualiza la tabla sin los registros eliminados
                limpiartabla(md);
                Consultas();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        //Desactiva esos elementos
        Desactivar_Botones();
        Desactivar_Campos();
        //Limpia todos los campos
        limpiar_Campos();
        //Muestra la informacion en la tabla.
        limpiartabla(md);
        Consultas();
        btnCancelar.setEnabled(false);
        btnNuevo.setEnabled(true);
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //Desactiva el modo edicion
        editando=false;
        btnCancelar.setEnabled(false);
        //Desactiva los campos y los botones
        Desactivar_Botones();
        Desactivar_Campos();
        limpiar_Campos();
        //Activa el Boton de Nuevo
        btnNuevo.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        editando=true;
        //Comprueba que no existan campos vacios
        if(txtID_Carrera.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No ha ingresado el ID del Ciclo Escolar");
        }
        else
        {

            id_Carrera=Integer.parseInt(txtID_Carrera.getText());
            //Guarda en una arreglo de tipo cadena los valores obtenidos de la base de datos
            Object Valores1[]=Comprobar_Id_Carreras(id_Carrera);
            //Guarda el ID si esta en la base de datos.
            id_Carrera=Integer.parseInt(Valores1[0].toString());
            JOptionPane.showMessageDialog(null, "Antiguo ID:"+id_Carrera);
            //Comprueba si no recibo informacion vacia o nula
            if(id_Carrera==0)
            {
                JOptionPane.showMessageDialog(null,"El ID de Registro es Incorrecto");
            }
            else
            {
                //Pasa la informacion del arreglo de Objetos al los campos.
                txtID_Carrera.setText(Valores1[0].toString());
                txtCarrera.setText(Valores1[1].toString());
                //Desactiva el boton de Edicion.
                btnEditar.setEnabled(false);
                //Cambia al modo edicion.
                editando=true;
                //Activa el boton para Guardar los cammbios realizados
                btnRegistrar.setEnabled(true);
                //Agrega la informacion al jtable
                // md.addRow(Valores1);
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

      public void limpiartabla(DefaultTableModel md)
    {
       //Recibo el modelo de la tabla para limpiarlo de manera correcta 
  for (int i = 0; i < jTable1.getRowCount(); i++) {
           md.removeRow(i);
           i-=1;
       }
    }
    
      public void Consultas()
    {
        try
        {
        String consultar="SELECT * FROM xorox.carreras;";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        Object datos[]=new Object[2];
        while(rs.next())
        {
         datos[0]=rs.getString("idCarreras");
         datos[1]=rs.getString("Carrera");
         md.addRow(datos);
        }
        conn.close();
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
    }
      
      
    public void limpiar()
    {
        txtID_Carrera.setText("");
        txtCarrera.setText("");
    }
    
       public void Actualizar(int idC)
    {
         
        try
      {   
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Segun la columna que haya seleccionado sera el valor que se modique
        String Carrera=txtCarrera.getText();      
         JOptionPane.showMessageDialog(null, "COMPROBEMOS EL ANITGUO ID "+id_Carrera);
        String actualizar="UPDATE `xorox`.`carreras` SET `idCarreras`=?, `Carrera`=? WHERE `idCarreras`=?;";
        PreparedStatement pst=conn.prepareStatement(actualizar);
        pst.setInt(1, idC);
        JOptionPane.showMessageDialog(null, "Nuevo ID:"+idC);
        pst.setString(2, Carrera);
        pst.setInt(3, id_Carrera);
      JOptionPane.showMessageDialog(null, "Antiguo ID:"+id_Carrera);   
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Cambio realizado con exito");
        conn.close();
      }catch(SQLException e)
      {
        JOptionPane.showMessageDialog(null, e.getMessage());
      }  
    }
       
        public boolean Insertar()
    {
        boolean exito=false;
       String registrar="INSERT INTO `xorox`.`carreras` (`idCarreras`, `Carrera`) VALUES (?, ?);";
        id_Carrera=Integer.parseInt(txtID_Carrera.getText());
        Carrera=txtCarrera.getText();
       
         try
            {
                
                Conexion miconexion=new Conexion();
                Connection conn= miconexion.getConnection();
                PreparedStatement pst=conn.prepareStatement(registrar);
                Object info[]={id_Carrera,Carrera};
                pst.setInt(1, id_Carrera);        
                pst.setString(2, Carrera);
                pst.executeUpdate();
                md.addRow(info);
                limpiar();
                JOptionPane.showMessageDialog(null, "Registro Exitoso");
                conn.close();
                Desactivar_Botones();
                Desactivar_Campos();
                exito=true;
            }catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
      return exito;
    }
        
          public Object[] Comprobar_Id_Carreras(int d)
    {
        Object info[]=new Object[2];
        try
        {
        String consultar="SELECT * FROM xorox.carreras where idCarreras="+d+";";
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        Statement pst2=conn.createStatement();
        ResultSet rs=pst2.executeQuery(consultar);
        while(rs.next())
        {
         info[0]=rs.getInt("idCarreras");
         info[1]=rs.getString("Carrera");
        }
        conn.close();
        btnEliminar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnCancelar.setEnabled(true);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
        return info;
    }
          
        public boolean Eliminar()
    {
              btnEliminar.setEnabled(false);
              boolean exito=false;
            try
        {
        Conexion miconexion=new Conexion();
        Connection conn= miconexion.getConnection();
        //Obtiene la fila a eliminar
        int idCarrera=Integer.parseInt(txtID_Carrera.getText());      
        String eliminar="DELETE FROM `xorox`.`carreras` WHERE `idCarreras`=?;";
        PreparedStatement pst=conn.prepareStatement(eliminar);  
        pst.setInt(1, idCarrera);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Registro Eliminado");
        conn.close();  
        exito=true;
        btnCancelar.setEnabled(false);
        }catch(SQLException e)
        {
           JOptionPane.showMessageDialog(null, e.getMessage());
        }
            return exito;                    
    }     
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel espacio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCarrera;
    private javax.swing.JTextField txtID_Carrera;
    // End of variables declaration//GEN-END:variables
}
